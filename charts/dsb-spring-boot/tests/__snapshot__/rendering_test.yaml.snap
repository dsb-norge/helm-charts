Full manifest should match snapshot:
  1: |
    allowVolumeExpansion: true
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: sc-blob-storage-RELEASE-NAME
    mountOptions:
      - -o allow_other
      - --file-cache-timeout-in-seconds=120
      - --use-attr-cache=true
      - --cancel-list-on-mount-seconds=10
      - -o attr_timeout=120
      - -o entry_timeout=120
      - -o negative_timeout=120
      - --log-level=LOG_WARNING
      - --cache-size-mb=1000
    parameters:
      allowBlobPublicAccess: "false"
      containerNamePrefix: releasename
      matchTags: "true"
      networkEndpointType: privateEndpoint
      protocol: fuse2
      skuName: Standard_GRS
      tags: CreatedBy=Azure Kubernetes Service,ApplicationName=AKS application storage,Description=Storage account providing persistent storage for application running in AKS
    provisioner: blob.csi.azure.com
    reclaimPolicy: Retain
    volumeBindingMode: Immediate
  2: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: sc-blob-storage-RELEASE-NAME
      name: pvc-blob-storage-RELEASE-NAME
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 100Gi
      storageClassName: sc-blob-storage-RELEASE-NAME
  3: |
    apiVersion: kubernetes-client.io/v1
    kind: ExternalSecret
    metadata:
      name: dsb-certificate-info
      namespace: NAMESPACE
    spec:
      backendType: azureKeyVault
      data:
        - key: value_for_password
          name: DSB_CERTIFICATE_CERTIFICATE_KEYSTORE
        - key: value_for_alias
          name: DSB_CERTIFICATE_CERTIFICATE_ALIAS
      keyVaultName: azure_key_vault_name
  4: |
    apiVersion: kubernetes-client.io/v1
    kind: ExternalSecret
    metadata:
      name: dsb-certificate-file
      namespace: NAMESPACE
    spec:
      backendType: azureKeyVault
      data:
        - isBinary: true
          key: vaule_for_certificate
          name: dsb-test-virksomhetssertifikat.pfx
      keyVaultName: azure_key_vault_name
  5: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: RELEASE-NAME-cr
      namespace: NAMESPACE
    rules:
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - list
          - get
      - apiGroups:
          - ""
          - apps
        resources:
          - pods
          - deployments
        verbs:
          - list
          - watch
          - get
  6: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: RELEASE-NAME-crb
      namespace: NAMESPACE
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cr
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-service-account
        namespace: NAMESPACE
  7: |
    apiVersion: v1
    data:
      root.key1: value1
      root.key2: value2
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-configmap
      namespace: NAMESPACE
  8: |
    apiVersion: secrets-store.csi.x-k8s.io/v1
    kind: SecretProviderClass
    metadata:
      name: RELEASE-NAME-kv-provider-5d7246df-kv-rg00-ss0-render-dev1
      namespace: NAMESPACE
    spec:
      parameters:
        keyvaultName: kv-rg00-ss0-render-dev1
        objects: "array:        \n  - |\n    objectAlias: \"bf2727f85b33281f\"\n    objectName: \"name-of-key-in-vault\"\n    objectType: \"key\"\n  - |\n    objectAlias: \"5251feedd63c7723\"\n    objectName: \"name-of-secret-in-vault\"\n    objectType: \"secret\"\n  - |\n    objectAlias: \"68db8538e5026d9f\"\n    objectName: \"name-of-cert-in-vault\"\n    objectType: \"cert\"\n"
        tenantID: b2255c28-9e28-4641-a6bc-b63391d59141
        usePodIdentity: "false"
        useVMManagedIdentity: "true"
        userAssignedIdentityID: b2255c28-9e28-4641-a6bc-b63391d59142
      provider: azure
      secretObjects:
        - data:
            - key: name.of.env.variable.holding.key.in.pem.format
              objectName: bf2727f85b33281f
          secretName: RELEASE-NAME-kv-objects-cc0a6e3f-kv-rg00-ss0-render-dev1
          type: Opaque
  9: |
    apiVersion: v1
    data:
      name.of.env.variable.holding.path.to.cert.as.file: /mnt/9e717efb70949021/68db8538e5026d9f
      name.of.env.variable.holding.path.to.key.as.file: /custom/file/paths/are/supported
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-kv-file-envs-45d9ce6a-kv-rg00-ss0-render-dev1
      namespace: NAMESPACE
  10: |
    apiVersion: secrets-store.csi.x-k8s.io/v1
    kind: SecretProviderClass
    metadata:
      name: RELEASE-NAME-kv-provider-8d4afcaf-kv-rg00-ss0-render-dev2
      namespace: NAMESPACE
    spec:
      parameters:
        keyvaultName: kv-rg00-ss0-render-dev2
        objects: "array:        \n  - |\n    objectAlias: \"6ed738c95f993853\"\n    objectName: \"name-of-key-in-vault\"\n    objectType: \"key\"\n  - |\n    objectAlias: \"74575ba0f9ab4322\"\n    objectName: \"name-of-secret-in-vault\"\n    objectType: \"secret\"\n  - |\n    objectAlias: \"c37bc3a2edadc0ed\"\n    objectName: \"name-of-cert-in-vault\"\n    objectType: \"cert\"\n"
        tenantID: b2255c28-9e28-4641-a6bc-b63391d59143
        usePodIdentity: "false"
        useVMManagedIdentity: "true"
        userAssignedIdentityID: b2255c28-9e28-4641-a6bc-b63391d59144
      provider: azure
      secretObjects:
        - data:
            - key: key_in_2_var
              objectName: 6ed738c95f993853
          secretName: RELEASE-NAME-kv-objects-1d1ac72b-kv-rg00-ss0-render-dev2
          type: Opaque
  11: |
    apiVersion: v1
    data:
      cert_in_2_file_path_var: /mnt/127cf7b855142ab1/c37bc3a2edadc0ed
    kind: ConfigMap
    metadata:
      name: RELEASE-NAME-kv-file-envs-cb749edb-kv-rg00-ss0-render-dev2
      namespace: NAMESPACE
  12: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: RELEASE-NAME-database-deployment
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: RELEASE-NAME-db-app
      template:
        metadata:
          annotations:
            checksum: chart-version=4.3.1_config-hash=ef64fd95d0cc5859ca1bff4a83c82ef73f33eb7eaaec9133d6db48fc8ff0df65
          labels:
            app: RELEASE-NAME-db-app
        spec:
          containers:
            - env:
                - name: ACCEPT_EULA
                  value: "Y"
                - name: SA_PASSWORD
                  value: password123
                - name: MSSQL_SA_PASSWORD
                  value: password123
              image: test-db:v1
              name: RELEASE-NAME-database-container
              ports:
                - containerPort: 1433
              resources:
                limits:
                  cpu: "2.5"
                  memory: 2048Mi
                requests:
                  cpu: "0.2"
                  memory: 1024Mi
          hostname: RELEASE-NAME-db-svc
          nodeSelector:
            NodePool: workers
  13: |
    apiVersion: v1
    kind: Service
    metadata:
      name: RELEASE-NAME-db-svc
      namespace: NAMESPACE
    spec:
      ports:
        - port: 1433
          protocol: TCP
          targetPort: 1433
      selector:
        app: RELEASE-NAME-db-app
  14: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        key1: value1
        key2: value2
        orgs.k8s.snyk.io/v1: 3c6b0e2e-36a2-4c0e-93c8-3ba8c87dd75d
      name: RELEASE-NAME-deployment
      namespace: NAMESPACE
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: RELEASE-NAME-app
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=4.3.1_config-hash=dfd4f04978e324353f8a6164e47c42f1d31788833620cce69b5367e9019f48c4
            co.elastic.logs/json.add_error_key: "true"
            co.elastic.logs/json.keys_under_root: "true"
            co.elastic.logs/json.overwrite_keys: "true"
          labels:
            app: RELEASE-NAME-app
            app.kubernetes.io/component: Backend API
            app.kubernetes.io/created-by: https://github.com/dsb-norge/helm-charts
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: Rendering test
            app.kubernetes.io/part-of: Verification stuff
            app.kubernetes.io/version: greatest
            azure.workload.identity/use: "true"
            helm.sh/chart: dsb-spring-boot-4.3.1
            helm.sh/chart-name: dsb-spring-boot
            helm.sh/chart-version: 4.3.1
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - RELEASE-NAME-app
                  topologyKey: kubernetes.io/hostname
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: chart-testing
                - name: LANG
                  value: no_NO.UTF-8
                - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
                  value: "true"
                - name: SPRING_RSOCKET_SERVER_PORT
                  value: "9091"
                - name: SPRING_RSOCKET_SERVER_TRANSPORT
                  value: websocket
                - name: SPRING_RSOCKET_SERVER_MAPPING_PATH
                  value: /socket
                - name: DATABASE_CONTAINER_USER
                  value: custom user
                - name: DATABASE_CONTAINER_PASSWORD
                  value: password123
                - name: DATABASE_CONTAINER_HOST_AND_PORT
                  value: RELEASE-NAME-db-svc:1433
                - name: DATABASE_CONTAINER_DATABASE
                  value: test-data
                - name: DSB_CERTIFICATE_CERTIFICATE_PATH
                  value: /certificates/dsb-test-virksomhetssertifikat.pfx
                - name: ANSIBLE_CA_CONFIG_PATH
                  value: /config/ansible-ca.pem
                - name: JAVA_OPTS
                  value: -XX:MaxDirectMemorySize=256M -XX:MaxMetaspaceSize=128M
                - name: BPL_JVM_HEAD_ROOM
                  value: "12.34"
              envFrom:
                - secretRef:
                    name: secret1
                - secretRef:
                    name: dsb-certificate-info
                - configMapRef:
                    name: configMap1
                - configMapRef:
                    name: RELEASE-NAME-configmap
                - secretRef:
                    name: RELEASE-NAME-kv-objects-cc0a6e3f-kv-rg00-ss0-render-dev1
                - configMapRef:
                    name: RELEASE-NAME-kv-file-envs-45d9ce6a-kv-rg00-ss0-render-dev1
                - secretRef:
                    name: RELEASE-NAME-kv-objects-1d1ac72b-kv-rg00-ss0-render-dev2
                - configMapRef:
                    name: RELEASE-NAME-kv-file-envs-cb749edb-kv-rg00-ss0-render-dev2
              image: wordpress:greatest
              imagePullPolicy: customValue
              lifecycle:
                preStop:
                  exec:
                    command:
                      - sh
                      - -c
                      - sleep 10
              livenessProbe:
                failureThreshold: 20
                httpGet:
                  path: /actuator/health/liveness
                  port: 81
                initialDelaySeconds: 15
                periodSeconds: 15
              name: RELEASE-NAME-container
              ports:
                - containerPort: 80
                  name: web
                - containerPort: 81
                  name: actuator
              readinessProbe:
                failureThreshold: 20
                httpGet:
                  path: /actuator/health/readiness
                  port: 81
                initialDelaySeconds: 10
                periodSeconds: 15
              resources:
                limits:
                  cpu: 1
                  memory: 19Mi
                requests:
                  cpu: 0.3
                  memory: 4Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: 3000
                runAsNonRoot: true
                runAsUser: 1000
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /certificates
                  name: dsb-certificate
                  readOnly: true
                - mountPath: /config
                  name: ansible-ca
                  readOnly: true
                - mountPath: /custom/file/paths/are/supported
                  name: RELEASE-NAME-kv-volume-9df4c11c-kv-rg00-ss0-render-dev1
                  readOnly: true
                  subPath: bf2727f85b33281f
                - mountPath: /hardcoded/path/of/secret/as/file
                  name: RELEASE-NAME-kv-volume-9df4c11c-kv-rg00-ss0-render-dev1
                  readOnly: true
                  subPath: 5251feedd63c7723
                - mountPath: /mnt/9e717efb70949021/68db8538e5026d9f
                  name: RELEASE-NAME-kv-volume-9df4c11c-kv-rg00-ss0-render-dev1
                  readOnly: true
                  subPath: 68db8538e5026d9f
                - mountPath: /mnt/127cf7b855142ab1/6ed738c95f993853
                  name: RELEASE-NAME-kv-volume-e5ef3384-kv-rg00-ss0-render-dev2
                  readOnly: true
                  subPath: 6ed738c95f993853
                - mountPath: /secret_in_2_file
                  name: RELEASE-NAME-kv-volume-e5ef3384-kv-rg00-ss0-render-dev2
                  readOnly: true
                  subPath: 74575ba0f9ab4322
                - mountPath: /mnt/127cf7b855142ab1/c37bc3a2edadc0ed
                  name: RELEASE-NAME-kv-volume-e5ef3384-kv-rg00-ss0-render-dev2
                  readOnly: true
                  subPath: c37bc3a2edadc0ed
                - mountPath: /mnt/azure-blob-storage
                  name: blob-storage
                  readOnly: false
          nodeSelector:
            NodePool: workers
          serviceAccountName: RELEASE-NAME-service-account
          volumes:
            - emptyDir: {}
              name: tmp-dir
            - name: dsb-certificate
              secret:
                secretName: dsb-certificate-file
            - configMap:
                name: ansible-ca-file
              name: ansible-ca
            - csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: RELEASE-NAME-kv-provider-5d7246df-kv-rg00-ss0-render-dev1
              name: RELEASE-NAME-kv-volume-9df4c11c-kv-rg00-ss0-render-dev1
            - csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: RELEASE-NAME-kv-provider-8d4afcaf-kv-rg00-ss0-render-dev2
              name: RELEASE-NAME-kv-volume-e5ef3384-kv-rg00-ss0-render-dev2
            - name: blob-storage
              persistentVolumeClaim:
                claimName: pvc-blob-storage-RELEASE-NAME
  15: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: RELEASE-NAME
      namespace: NAMESPACE
    spec:
      rules:
        - host: example.com
          http:
            paths:
              - backend:
                  service:
                    name: RELEASE-NAME
                    port:
                      number: 80
                path: /example
                pathType: Prefix
  16: |
    apiVersion: v1
    data:
      ansible-ca.pem: |
        -----BEGIN CERTIFICATE-----
        MIIFFTCCAv2gAwIBAgIUB7/W9hZbOPR/Co/SFx9rlV71A+swDQYJKoZIhvcNAQEL
        -----END CERTIFICATE-----
    kind: ConfigMap
    metadata:
      name: ansible-ca-file
      namespace: NAMESPACE
  17: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: RELEASE-NAME.pdb
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: RELEASE-NAME-app
  18: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: RELEASE-NAME-service
        app.kubernetes.io/component: Backend API
        app.kubernetes.io/created-by: https://github.com/dsb-norge/helm-charts
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: Rendering test
        app.kubernetes.io/part-of: Verification stuff
        app.kubernetes.io/version: greatest
        chart-name: dsb-spring-boot
        chart-version: 4.3.1
        helm.sh/chart: dsb-spring-boot-4.3.1
        helm.sh/chart-name: dsb-spring-boot
        helm.sh/chart-version: 4.3.1
        management.port: "81"
        spring-boot: "true"
      name: RELEASE-NAME
      namespace: NAMESPACE
    spec:
      ports:
        - name: web
          port: 80
        - name: actuator
          port: 81
        - name: websocket
          port: 9091
      selector:
        app: RELEASE-NAME-app
  19: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        azure.workload.identity/client-id: test-client-id
      labels:
        app: RELEASE-NAME-app
      name: RELEASE-NAME-service-account
      namespace: NAMESPACE
  20: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        release: kube-prometheus
      name: RELEASE-NAME-monitor
      namespace: NAMESPACE
    spec:
      endpoints:
        - path: /path/to/prometheus
          port: actuator
          scheme: http
      namespaceSelector:
        matchNames:
          - NAMESPACE
      selector:
        matchLabels:
          app: RELEASE-NAME-service
Minimal manifest should match snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        orgs.k8s.snyk.io/v1: 3c6b0e2e-36a2-4c0e-93c8-3ba8c87dd75d
      name: RELEASE-NAME-deployment
      namespace: NAMESPACE
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: RELEASE-NAME-app
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=4.3.1_config-hash=80a6e01961adf1313afcc304f58c9df8cc05fdb4d6bd07bfeb897c440cbee4ca
            co.elastic.logs/json.add_error_key: "true"
            co.elastic.logs/json.keys_under_root: "true"
            co.elastic.logs/json.overwrite_keys: "true"
          labels:
            app: RELEASE-NAME-app
            app.kubernetes.io/component: API
            app.kubernetes.io/created-by: Helm
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            app.kubernetes.io/part-of: RELEASE-NAME
            app.kubernetes.io/version: latest
            azure.workload.identity/use: "false"
            helm.sh/chart: dsb-spring-boot-4.3.1
            helm.sh/chart-name: dsb-spring-boot
            helm.sh/chart-version: 4.3.1
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - RELEASE-NAME-app
                  topologyKey: kubernetes.io/hostname
          containers:
            - env:
                - name: SPRING_PROFILES_ACTIVE
                  value: kubernetes
                - name: LANG
                  value: en_US.UTF-8
              envFrom: null
              image: nginx:latest
              lifecycle:
                preStop:
                  exec:
                    command:
                      - sh
                      - -c
                      - sleep 10
              livenessProbe:
                failureThreshold: 20
                httpGet:
                  path: /actuator/health/liveness
                  port: 8180
                initialDelaySeconds: 15
                periodSeconds: 15
              name: RELEASE-NAME-container
              ports:
                - containerPort: 8080
                  name: web
                - containerPort: 8180
                  name: actuator
              readinessProbe:
                failureThreshold: 20
                httpGet:
                  path: /actuator/health/readiness
                  port: 8180
                initialDelaySeconds: 10
                periodSeconds: 15
              resources:
                limits:
                  cpu: 2.5
                  memory: 1024Mi
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: 3000
                runAsNonRoot: true
                runAsUser: 1000
              volumeMounts:
                - mountPath: /tmp
                  name: tmp-dir
          nodeSelector:
            NodePool: workers
          serviceAccountName: RELEASE-NAME-service-account
          volumes:
            - emptyDir: {}
              name: tmp-dir
  2: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: RELEASE-NAME.pdb
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: RELEASE-NAME-app
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: RELEASE-NAME-service
        app.kubernetes.io/component: API
        app.kubernetes.io/created-by: Helm
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: RELEASE-NAME
        app.kubernetes.io/part-of: RELEASE-NAME
        app.kubernetes.io/version: latest
        chart-name: dsb-spring-boot
        chart-version: 4.3.1
        helm.sh/chart: dsb-spring-boot-4.3.1
        helm.sh/chart-name: dsb-spring-boot
        helm.sh/chart-version: 4.3.1
        management.port: "8180"
        spring-boot: "true"
      name: RELEASE-NAME
      namespace: NAMESPACE
    spec:
      ports:
        - name: web
          port: 8080
        - name: actuator
          port: 8180
      selector:
        app: RELEASE-NAME-app
  4: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: RELEASE-NAME-app
      name: RELEASE-NAME-service-account
      namespace: NAMESPACE
should render default with PodDisruptionBudget and should match snapshot:
  1: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: RELEASE-NAME.pdb
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: RELEASE-NAME-app
