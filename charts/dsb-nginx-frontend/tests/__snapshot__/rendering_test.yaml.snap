Full manifest should match snapshot:
  1: |
    apiVersion: v1
    data:
      CLIENT_MAX_BODY_SIZE: 20M
      LOC_API_PROXY_PASS_HOST: https://www.dsb.no
      root.key1: value1
      root.key2: value2
    kind: ConfigMap
    metadata:
      name: frontend1
      namespace: NAMESPACE
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        key1: value1
        key2: value2
        orgs.k8s.snyk.io/v1: 3c6b0e2e-36a2-4c0e-93c8-3ba8c87dd75d
      name: frontend1
      namespace: NAMESPACE
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: frontend1
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=2.1.24_config-hash=9360d889f5ea27c2712db021a1316cf8686660b8004af9a7cd898fb5ad79aca5
            no.dsb-norge.filebeat/autodiscover-template: nginx
          labels:
            app: frontend1
            app.kubernetes.io/component: Frontend
            app.kubernetes.io/created-by: https://github.com/dsb-norge/helm-charts
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: Rendering test
            app.kubernetes.io/part-of: Verification stuff
            app.kubernetes.io/version: greatest
            helm.sh/chart: dsb-nginx-frontend-2.1.24
            helm.sh/chart-name: dsb-nginx-frontend
            helm.sh/chart-version: 2.1.24
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - frontend1
                  topologyKey: kubernetes.io/hostname
          containers:
            - env:
                - name: MANAGEMENT_LISTEN_PORT
                  value: "8180"
                - name: LANG
                  value: no_NO.UTF-8
                - name: LOC_SOCKET_PROXY_PASS_HOST
                  value: ws://websocket.host.com:9091
                - name: LOC_API_PROXY_READ_TIMEOUT
                  value: "120"
                - name: LOC_API_PROXY_CONNECT_TIMEOUT
                  value: "120"
                - name: LOC_API_PROXY_SEND_TIMEOUT
                  value: "120"
                - name: CLIENT_MAX_BODY_SIZE
                  value: 20M
              envFrom:
                - secretRef:
                    name: secret1
                - configMapRef:
                    name: configMap1
                - configMapRef:
                    name: frontend1
              image: wordpress:greatest
              livenessProbe:
                httpGet:
                  path: /
                  port: 80
                initialDelaySeconds: 5
              name: frontend1
              ports:
                - containerPort: 80
                  name: web
                - containerPort: 8180
                  name: mgmt
              readinessProbe:
                httpGet:
                  path: /
                  port: 80
                initialDelaySeconds: 2
              resources:
                limits:
                  cpu: 1
                  memory: 19Mi
                requests:
                  cpu: 0.3
                  memory: 4Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsGroup: 101
                runAsUser: 101
              volumeMounts:
                - mountPath: /mnt/dsb/key-vault
                  name: my-key-vault-volume
                  readOnly: true
                - mountPath: /mnt/dsb/key-second-vault
                  name: my-key-vault-volume-2
                  readOnly: true
            - args:
                - -nginx.scrape-uri=http://localhost:8180/status
                - -prometheus.const-labels=nginxapp=RELEASE-NAME
              image: nginx/nginx-prometheus-exporter:0.10.0
              name: frontend1-mgmt
              ports:
                - containerPort: 9113
                  name: prometheus
                  protocol: TCP
              resources:
                limits:
                  cpu: 1
                  memory: 19Mi
                requests:
                  cpu: 0.3
                  memory: 4Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: 1000
                runAsNonRoot: true
                runAsUser: 1000
          nodeSelector:
            NodePool: workers
          volumes:
            - csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: my-key-vault-from-azure
              name: my-key-vault-volume
            - emptyDir: {}
              name: my-empty-dir
  3: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-www-to-non-www@kubernetescrd
      name: frontend1
      namespace: NAMESPACE
    spec:
      rules:
        - host: example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend1
                    port:
                      number: 80
                path: /example
                pathType: Prefix
        - host: www.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend1
                    port:
                      number: 80
                path: /example
                pathType: Prefix
  4: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend1
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend1
  5: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: frontend1-service
        app.kubernetes.io/component: Frontend
        app.kubernetes.io/created-by: https://github.com/dsb-norge/helm-charts
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: Rendering test
        app.kubernetes.io/part-of: Verification stuff
        app.kubernetes.io/version: greatest
        chart-name: dsb-nginx-frontend
        chart-version: 2.1.24
        helm.sh/chart: dsb-nginx-frontend-2.1.24
        helm.sh/chart-name: dsb-nginx-frontend
        helm.sh/chart-version: 2.1.24
      name: frontend1
      namespace: NAMESPACE
    spec:
      ports:
        - name: web
          port: 80
        - name: status
          port: 8180
        - name: prometheus
          port: 9113
      selector:
        app: frontend1
  6: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        release: kube-prometheus
      name: RELEASE-NAME-monitor
      namespace: NAMESPACE
    spec:
      endpoints:
        - interval: 30s
          port: prometheus
      namespaceSelector:
        matchNames:
          - NAMESPACE
      selector:
        matchLabels:
          app: frontend1-service
Minimal manifest should match snapshot:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        orgs.k8s.snyk.io/v1: 3c6b0e2e-36a2-4c0e-93c8-3ba8c87dd75d
      name: frontend
      namespace: NAMESPACE
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: frontend
      template:
        metadata:
          annotations:
            apparmor.security.beta.kubernetes.io/pod: runtime/default
            checksum: chart-version=2.1.24_config-hash=084e8c6b5883b391e634f9048b27b54fdc3f0206bb9f9b95ae0806a71f4cbaa7
            no.dsb-norge.filebeat/autodiscover-template: nginx
          labels:
            app: frontend
            app.kubernetes.io/component: Frontend
            app.kubernetes.io/created-by: Helm
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: RELEASE-NAME
            app.kubernetes.io/part-of: RELEASE-NAME
            app.kubernetes.io/version: latest
            helm.sh/chart: dsb-nginx-frontend-2.1.24
            helm.sh/chart-name: dsb-nginx-frontend
            helm.sh/chart-version: 2.1.24
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - frontend
                  topologyKey: kubernetes.io/hostname
          containers:
            - env:
                - name: MANAGEMENT_LISTEN_PORT
                  value: "8180"
                - name: LANG
                  value: en_US.UTF-8
                - name: LOC_SOCKET_PROXY_PASS_HOST
                  value: null
                - name: LOC_API_PROXY_READ_TIMEOUT
                  value: "120"
                - name: LOC_API_PROXY_CONNECT_TIMEOUT
                  value: "120"
                - name: LOC_API_PROXY_SEND_TIMEOUT
                  value: "120"
                - name: CLIENT_MAX_BODY_SIZE
                  value: 20M
              envFrom: null
              image: nginx:latest
              livenessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 5
              name: frontend
              ports:
                - containerPort: 8080
                  name: web
                - containerPort: 8180
                  name: mgmt
              readinessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 2
              resources:
                limits:
                  cpu: 100m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsGroup: 101
                runAsUser: 101
            - args:
                - -nginx.scrape-uri=http://localhost:8180/status
                - -prometheus.const-labels=nginxapp=RELEASE-NAME
              image: nginx/nginx-prometheus-exporter:0.10.0
              name: frontend-mgmt
              ports:
                - containerPort: 9113
                  name: prometheus
                  protocol: TCP
              resources:
                limits:
                  cpu: 50m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsGroup: 1000
                runAsNonRoot: true
                runAsUser: 1000
          nodeSelector:
            NodePool: workers
  2: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend
  3: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: frontend-service
        app.kubernetes.io/component: Frontend
        app.kubernetes.io/created-by: Helm
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: RELEASE-NAME
        app.kubernetes.io/part-of: RELEASE-NAME
        app.kubernetes.io/version: latest
        chart-name: dsb-nginx-frontend
        chart-version: 2.1.24
        helm.sh/chart: dsb-nginx-frontend-2.1.24
        helm.sh/chart-name: dsb-nginx-frontend
        helm.sh/chart-version: 2.1.24
      name: frontend
      namespace: NAMESPACE
    spec:
      ports:
        - name: web
          port: 8080
        - name: status
          port: 8180
        - name: prometheus
          port: 9113
      selector:
        app: frontend
Support multiple ingress hosts:
  1: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: traefik-redirect-www-to-non-www@kubernetescrd
      name: frontend
      namespace: NAMESPACE
    spec:
      rules:
        - host: example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /
                pathType: Prefix
        - host: www.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /
                pathType: Prefix
        - host: www.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /
                pathType: Prefix
        - host: www.www.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /
                pathType: Prefix
        - host: admin.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /secret
                pathType: Prefix
        - host: www.admin.example.com
          http:
            paths:
              - backend:
                  service:
                    name: frontend
                    port:
                      number: 8080
                path: /secret
                pathType: Prefix
  2: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: frontend-service
        app.kubernetes.io/component: Frontend
        app.kubernetes.io/created-by: Helm
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: RELEASE-NAME
        app.kubernetes.io/part-of: RELEASE-NAME
        app.kubernetes.io/version: latest
        chart-name: dsb-nginx-frontend
        chart-version: 2.1.24
        helm.sh/chart: dsb-nginx-frontend-2.1.24
        helm.sh/chart-name: dsb-nginx-frontend
        helm.sh/chart-version: 2.1.24
      name: frontend
      namespace: NAMESPACE
    spec:
      ports:
        - name: web
          port: 8080
        - name: status
          port: 8180
      selector:
        app: frontend
should render default with PodDisruptionBudget and should match snapshot:
  1: |
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: frontend
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: frontend
