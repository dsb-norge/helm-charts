---
# Container image ref for cron job
image:

# Container image tag for cron job
tag:

# Possibility to override default imagePullPolicy
imagePullPolicy:

# Annotations to put on the CronJob:
cronJobAnnotations:
  # dsb-norge org. in Snyk
  orgs.k8s.snyk.io/v1: 3c6b0e2e-36a2-4c0e-93c8-3ba8c87dd75d

# Default Spring Profile:
springProfiles: "kubernetes"

# Example:  */1 * * * *
schedule:

# If it is set to true, all subsequent executions are suspended. This setting does not apply to already started executions
# https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#suspend:
suspend: false

# Max lifetime of the pod:
activeDeadlineSeconds:

# It is possible to use a normal yaml tree here, for example:
# root:
#   node1: 1
#   node2: 2
#
# If there is a lot of config, it is useful to use the helm function --set-file.
config:

# Reference secrets that are mounted on the pod:
secretRefs: []

# Reference configMaps that are mounted on the pod:
configMapRefs: []

memory_request: "256Mi"
memory_limit: "1024Mi"

cpu_request: "100m"
cpu_limit: "2.5"

# If this is enabled, a docker image with a mssql database is created.
# The following env variables are then added to the pod:
# DATABASE_CONTAINER_USER, DATABASE_CONTAINER_PASSWORD, DATABASE_CONTAINER_HOST_AND_PORT and DATABASE_CONTAINER_DATABASE
database_container:
  enabled: false
  image: "dsbacr.azurecr.io/dsb-norge/dsb-mssql-server:2019-latest"
  # Depends on what image is used:
  database: emptydb               # env: DATABASE_CONTAINER_DATABASE
  user: sa                        # env: DATABASE_CONTAINER_USER
  password: DoN0tUse1Production   # env: DATABASE_CONTAINER_PASSWORD
