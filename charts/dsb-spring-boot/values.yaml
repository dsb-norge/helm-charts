---
# Number of pods to create:
replicas: 2
# For the pod disruption budget, default is (replicas - 1):
minAvailableReplicas:

image:
tag:

# Default Spring Profile:
springProfiles: "kubernetes"

# It is possible to use a normal yaml tree here, for example:
# root:
#   node1: 1
#   node2: 2
#
# If there is a lot of config, it is useful to use the helm function --set-file.
config:

# Reference secrets that are mounted on the pod:
secretRefs: []

# If the service should be exposed outside the cluster by Traefik, specify the rule:
application_traefik_rule:
# If needed, include a path prefix that is removed before sending the request to the pod:
application_traefik_strip_prefix:

application_web_port: 8080
application_actuator_port: 8180

prometheus_enabled: "true"
prometheus_port: 8180
prometheus_path: "/actuator/prometheus"

memory_request: "256Mi"
memory_limit: "1024Mi"

cpu_request: "0.2"
cpu_limit: "2.5"

# If this is enabled, a docker image with a mssql database is created.
# The following env variables are then added to the pod:
# DATABASE_CONTAINER_USER, DATABASE_CONTAINER_PASSWORD, DATABASE_CONTAINER_HOST_AND_PORT and DATABASE_CONTAINER_DATABASE
database_container_enabled: false
database_container_image: "dsbacr.azurecr.io/dsb-norge/mssql-empty:latest"
# This is hardcoded in the image used:
database_container_password: DoN0tUse1Production

jobs:

# Reference secrets that are mounted on the cron job pod:
job_secretRefs:
