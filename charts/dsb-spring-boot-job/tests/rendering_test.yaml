suite: test deployment
tests:
  - it: Minimal manifest should match snapshot
    templates:
      - cronJob.yaml
    set:
      image: nginx
      tag: latest
      schedule: "*/1 * * * *"
      suspend: true
    asserts:
      - matchSnapshot: { }
  - it: Full manifest should match snapshot
    templates:
      - configMap.yaml
      - cronJob.yaml
      - databaseDeployment.yaml
      - databaseService.yaml
      - csi-secrets-store-azure.yaml
    set:
      replicas: 3
      minAvailableReplicas: 1
      image: wordpress
      tag: greatest
      imagePullPolicy: customValue
      cronJobAnnotations:
        key1: value1
        key2: value2
      springProfiles: "chart-testing"
      schedule: "*/2 * * * *"
      config:
        root:
          key1: value1
          key2: value2
      secretRefs:
        - secret1
      configMapRefs:
        - configMap1
      ingress_host: example.com
      ingress_path: /example
      application_web_port: 80
      application_actuator_port: 81
      prometheus_enabled: "false"
      prometheus_port: 82
      prometheus_path: "/path/to/prometheus"
      memory_request: "4Mi"
      memory_limit: "19Mi"
      cpu_request: "0.3"
      cpu_limit: "1"
      database_container:
        enabled: true
        image: "test-db:v1"
        database: "test-data"
        user: "custom user"
        password: "password123"
      jobs:
      - name: cron-example
        image_tag: greatest
        schedule: "*/2 * * * *"
        tokenURL: "https://example.com/token"
        apiPath: "/do"
        method: "TRACE"
      # Reference secrets that are mounted on the cron job pod:
      job_secretRefs:
        - jobSecret1
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59143
          clientId: b2255c28-9e28-4641-a6bc-b63391d59144
          kvName: kv-rg00-ss0-render-dev2
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            keys:
              - nameInKv: "name-of-key-in-vault"
                mountAsEnv: "name.of.env.variable.holding.key.in.pem.format"
                fileMountPathEnvName: "name.of.env.variable.holding.path.to.key.as.file"
                fileMountPath: "/custom/file/paths/are/supported"
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
            certs:
              - nameInKv: "name-of-cert-in-vault"
                fileMountPathEnvName: "name.of.env.variable.holding.path.to.cert.as.file"
          myKv2:
            keys:
              - nameInKv: "name-of-key-in-vault"
                mountAsEnv: "key_in_2_var"
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/secret_in_2_file"
            certs:
              - nameInKv: "name-of-cert-in-vault"
                fileMountPathEnvName: "cert_in_2_file_path_var"
    asserts:
      - matchSnapshot: { }
