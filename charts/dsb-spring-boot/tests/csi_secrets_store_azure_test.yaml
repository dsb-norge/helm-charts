suite: test Azure Key Vault Provider for Kubernetes Secrets Store CSI driver
tests:
  - it: should render without SecretProviderClass as default
    templates:
      - csi-secrets-store-azure.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should be of kind SecretProviderClass
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues: {}
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - isKind:
          of: SecretProviderClass
  - it: 'should render with usePodIdentity: "false" and useVMManagedIdentity: "true"'
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues: {}
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.usePodIdentity
          value: "false"
      - equal:
          path: spec.parameters.useVMManagedIdentity
          value: "true"
  - it: should prefer values from key vault spec over default values if defined
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59140
          clientId: b2255c28-9e28-4641-a6bc-b63391d59140
          kvName: kv-rg00-ss0-render-dev0
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.tenantID
          value: "b2255c28-9e28-4641-a6bc-b63391d59141"
      - equal:
          path: spec.parameters.userAssignedIdentityID
          value: "b2255c28-9e28-4641-a6bc-b63391d59142"
  - it: should fallback to use default values if values are not defined for key vault spec
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
          clientId: b2255c28-9e28-4641-a6bc-b63391d59142
          kvName: kv-rg00-ss0-render-dev1
        vaults:
          myKv1:
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.tenantID
          value: "b2255c28-9e28-4641-a6bc-b63391d59141"
      - equal:
          path: spec.parameters.userAssignedIdentityID
          value: "b2255c28-9e28-4641-a6bc-b63391d59142"
      - equal:
          path: spec.parameters.keyvaultName
          value: "kv-rg00-ss0-render-dev1"
  - it: should prefer values from key vault spec over global and default values if defined
    templates:
      - csi-secrets-store-azure.yaml
    set:
      global:
        azureKeyVaultDefaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59110
          clientId: b2255c28-9e28-4641-a6bc-b63391d59120
          kvName: kv-rg00-ss0-render-dev10
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59130
          clientId: b2255c28-9e28-4641-a6bc-b63391d59140
          kvName: kv-rg00-ss0-render-dev20
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.tenantID
          value: "b2255c28-9e28-4641-a6bc-b63391d59141"
      - equal:
          path: spec.parameters.userAssignedIdentityID
          value: "b2255c28-9e28-4641-a6bc-b63391d59142"
  - it: should prefer global values over default values if values are not defined for key vault spec
    templates:
      - csi-secrets-store-azure.yaml
    set:
      global:
        azureKeyVaultDefaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59110
          clientId: b2255c28-9e28-4641-a6bc-b63391d59120
          kvName: kv-rg00-ss0-render-dev10
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59130
          clientId: b2255c28-9e28-4641-a6bc-b63391d59140
          kvName: kv-rg00-ss0-render-dev20
        vaults:
          myKv1:
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.tenantID
          value: "b2255c28-9e28-4641-a6bc-b63391d59110"
      - equal:
          path: spec.parameters.userAssignedIdentityID
          value: "b2255c28-9e28-4641-a6bc-b63391d59120"
      - equal:
          path: spec.parameters.keyvaultName
          value: "kv-rg00-ss0-render-dev10"
  - it: should be possible to specify only global default values
    templates:
      - csi-secrets-store-azure.yaml
    set:
      global:
        azureKeyVaultDefaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
          clientId: b2255c28-9e28-4641-a6bc-b63391d59142
          kvName: kv-rg00-ss0-render-dev1
      azureKeyVault:
        defaultValues: {}
        vaults:
          myKv1:
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                fileMountPath: "/hardcoded/path/of/secret/as/file"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.parameters.tenantID
          value: "b2255c28-9e28-4641-a6bc-b63391d59141"
      - equal:
          path: spec.parameters.userAssignedIdentityID
          value: "b2255c28-9e28-4641-a6bc-b63391d59142"
      - equal:
          path: spec.parameters.keyvaultName
          value: "kv-rg00-ss0-render-dev1"
  - it: should render volume mounts even though not requested
    templates:
      - deployment.yaml
    set:
      azureKeyVault:
        defaultValues: {}
        vaults:
          myKv1:
            tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
            clientId: b2255c28-9e28-4641-a6bc-b63391d59142
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault"
                mountAsEnv: "env1"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /mnt/9e717efb70949021/8166afd55efa79fa
  - it: should support multiple key vaults - 2 resources created
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
          clientId: b2255c28-9e28-4641-a6bc-b63391d59142
          kvName: kv-rg00-ss0-render-dev1
        vaults:
          myKv1:
            secrets:
              - nameInKv: "name-of-secret-in-vault-1"
                mountAsEnv: "env1"
          myKv2:
            kvName: kv-rg00-ss0-render-dev2
            secrets:
              - nameInKv: "name-of-secret-in-vault-2"
                mountAsEnv: "env2"
    asserts:
      - hasDocuments:
          count: 2
  - it: should support multiple key vaults - first vault name
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
          clientId: b2255c28-9e28-4641-a6bc-b63391d59142
        vaults:
          myKv1:
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault-1"
                mountAsEnv: "env1"
          myKv2:
            kvName: kv-rg00-ss0-render-dev2
            secrets:
              - nameInKv: "name-of-secret-in-vault-2"
                mountAsEnv: "env2"
    documentIndex: 0
    asserts:
      - equal:
          path: spec.parameters.keyvaultName
          value: kv-rg00-ss0-render-dev1
  - it: should support multiple key vaults - second vault name
    templates:
      - csi-secrets-store-azure.yaml
    set:
      azureKeyVault:
        defaultValues:
          tenantId: b2255c28-9e28-4641-a6bc-b63391d59141
          clientId: b2255c28-9e28-4641-a6bc-b63391d59142
        vaults:
          myKv1:
            kvName: kv-rg00-ss0-render-dev1
            secrets:
              - nameInKv: "name-of-secret-in-vault-1"
                mountAsEnv: "env1"
          myKv2:
            kvName: kv-rg00-ss0-render-dev2
            secrets:
              - nameInKv: "name-of-secret-in-vault-2"
                mountAsEnv: "env2"
    documentIndex: 1
    asserts:
      - equal:
          path: spec.parameters.keyvaultName
          value: kv-rg00-ss0-render-dev2
