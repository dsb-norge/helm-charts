apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Release.Namespace }}
  {{- if .Values.deploymentAnnotations }}
  annotations:
    {{- range $key, $val := .Values.deploymentAnnotations }}
      {{ $key }}: {{ $val | quote }}
      {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
      annotations:
        "apparmor.security.beta.kubernetes.io/pod": "runtime/default"
        "prometheus.io/scrape": {{ .Values.prometheus_enabled | quote }}
        "prometheus.io/port": {{ .Values.prometheus_port | quote }}
        "prometheus.io/path": {{ .Values.prometheus_path | quote }}
        # We change this annotation on change in chart or parameters, to force re-create of pods (to pick up config changes etc)
        # We create a string based on the chart version, and the resolved configuration values.
        # See https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum: "chart-version={{ .Chart.Version }}_config-hash={{ .Values | toString | sha256sum }}"
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.overwrite_keys: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.message_key: "message"
    spec:
      serviceAccountName: {{ .Release.Name }}-service-account
      nodeSelector:
        NodePool: workers
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - {{ .Release.Name }}-app
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Release.Name }}-container
          image: "{{ .Values.image }}:{{ .Values.tag }}"
          # Sleep before shutdown to finish requests, as suggested here:
          # https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#cloud-deployment-kubernetes
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.application_actuator_port }}
            initialDelaySeconds: 15
            periodSeconds: {{ .Values.liveness_period_seconds }}
            failureThreshold: {{ .Values.liveness_failure_threshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.application_actuator_port }}
            initialDelaySeconds: 10
            periodSeconds: {{.Values.readiness_period_seconds }}
            failureThreshold: {{ .Values.readiness_failure_threshold }}
          resources:
            requests:
              memory: {{ .Values.memory_request }}
              cpu: {{ .Values.cpu_request }}
            limits:
              memory: {{ .Values.memory_limit }}
              cpu: {{ .Values.cpu_limit }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springProfiles | quote }}
            {{- if .Values.database_container_enabled }}
            - name: DATABASE_CONTAINER_USER
              # This is hardcoded in the image used:
              value: "sa"
            - name: DATABASE_CONTAINER_PASSWORD
              value: {{ .Values.database_container_password | quote }}
            - name: DATABASE_CONTAINER_HOST_AND_PORT
              value: "{{ .Release.Name }}-db-svc:1433"
            - name: DATABASE_CONTAINER_DATABASE
              # This is hardcoded in the image used:
              value: "emptydb"
            {{- end }}
            {{- if .Values.java_opts_enabled }}
          - name: JAVA_OPTS
            value: {{ .Values.java_opts | quote }}
            {{- end }}
          envFrom:
          {{- range .Values.secretRefs }}
            - secretRef:
                name: {{ . | quote }}
          {{- end }}
          # We place config AFTER secrets, to more easily override with dummy values during development:
          {{- range .Values.configMapRefs }}
            - configMapRef:
                name: {{ . | quote }}
          {{- end }}
          {{- if .Values.config  }}
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          {{- end }}
          ports:
            - containerPort: {{ .Values.application_web_port }}
              name: web
            - containerPort: {{ .Values.application_actuator_port }}
              name: actuator
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
          securityContext:
            capabilities:
              drop: [ALL]
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 3000
      volumes:
        - name: tmp-dir
          emptyDir: {}
